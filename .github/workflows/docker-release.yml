name: Release Docker Image

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: true
        type: string
      platforms:
        description: 'Target platforms'
        required: false
        default: 'linux/amd64,linux/arm64'
        type: string
      debug:
        description: 'Enable debug mode'
        required: false
        default: false
        type: boolean

env:
  REGISTRY: docker.io
  IMAGE_NAME: driosalido/karma-mcp

jobs:
  # Run full test suite before release
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
      
      - name: Set up Python
        run: uv python install 3.12
      
      - name: Install dependencies
        run: uv sync --all-extras --dev
      
      - name: Run tests
        run: |
          uv run python scripts/run_tests.py --unit --verbose
          # Skip integration tests in CI - they require a running Karma server
        env:
          KARMA_URL: http://localhost:8080

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Set release tag
        id: tag
        run: |
          if [ -n "${{ github.event.inputs.tag }}" ]; then
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi
          
          if [ "${{ github.event.inputs.debug }}" = "true" ]; then
            echo "## 🐛 Release Debug Info" >> $GITHUB_STEP_SUMMARY
            echo "- **Input Tag:** ${{ github.event.inputs.tag }}" >> $GITHUB_STEP_SUMMARY
            echo "- **GitHub Ref:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Final Tag:** $([ -n "${{ github.event.inputs.tag }}" ] && echo "${{ github.event.inputs.tag }}" || echo "${{ github.ref_name }}")" >> $GITHUB_STEP_SUMMARY
          fi
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Manual tag input or tag event (e.g., v1.0.0)
            type=raw,value=${{ steps.tag.outputs.tag }}
            # Semantic versioning from tag
            type=semver,pattern={{version}},value=${{ steps.tag.outputs.tag }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.tag.outputs.tag }}
            type=semver,pattern={{major}},value=${{ steps.tag.outputs.tag }}
            # Latest tag for releases
            type=raw,value=latest
          labels: |
            org.opencontainers.image.title=Karma MCP Server
            org.opencontainers.image.description=MCP server for Karma Alert Dashboard integration with multi-cluster support
            org.opencontainers.image.vendor=driosalido
            org.opencontainers.image.url=https://github.com/driosalido/karma-mcp
            org.opencontainers.image.source=https://github.com/driosalido/karma-mcp
            org.opencontainers.image.licenses=MIT
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ github.event.inputs.platforms || 'linux/amd64,linux/arm64' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VERSION=${{ steps.tag.outputs.tag }}
      
      - name: Update Docker Hub description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ env.IMAGE_NAME }}
          readme-filepath: ./README.md
      
      - name: Create Release Summary
        run: |
          echo "## 🚀 Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Docker Image:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Available Tags:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Supported Architectures:**" >> $GITHUB_STEP_SUMMARY
          echo "- linux/amd64 ✅" >> $GITHUB_STEP_SUMMARY
          echo "- linux/arm64 ✅" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Latest Features:**" >> $GITHUB_STEP_SUMMARY
          echo "- 🔍 Multi-cluster alert search by name (\`get_alert_details_multi_cluster\`)" >> $GITHUB_STEP_SUMMARY
          echo "- 🐳 Container-based alert search (\`search_alerts_by_container\`)" >> $GITHUB_STEP_SUMMARY
          echo "- 🌐 Enhanced REST API endpoints" >> $GITHUB_STEP_SUMMARY
          echo "- 🚀 Full MCP protocol support with new tools" >> $GITHUB_STEP_SUMMARY